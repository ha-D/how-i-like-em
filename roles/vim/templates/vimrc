call plug#begin()

Plug 'scrooloose/nerdtree'
Plug 'fatih/vim-go'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-surround'
Plug 'kien/ctrlp.vim'
Plug 'majutsushi/tagbar'
Plug 'dyng/ctrlsf.vim'
Plug 'tpope/vim-commentary'
Plug 'APZelos/blamer.nvim'
Plug 'psliwka/vim-smoothie'
Plug 'sheerun/vim-polyglot'
Plug 'scrooloose/syntastic'

Plug 'leafgarland/typescript-vim'
Plug 'bigfish/vim-js-context-coloring'
Plug 'neoclide/vim-jsx-improve'
Plug 'Quramy/vim-js-pretty-template'

Plug 'joshdick/onedark.vim'
Plug 'rakr/vim-one'
Plug 'morhetz/gruvbox'
Plug 'dracula/vim', { 'as': 'dracula' }

" Should be last
Plug 'ryanoasis/vim-devicons'
call plug#end()

" -------------------------------------------------------------------------------------------------
" Basics
" -------------------------------------------------------------------------------------------------
let mapleader = ";"

syntax on

set mouse=a
set belloff=all
set encoding=utf8

set autoindent
set smartindent
set shiftwidth=4
set smarttab
set clipboard=unnamed
set expandtab

set number
set relativenumber
set cursorline
set showmatch

set incsearch
set ignorecase
set smartcase

set noswapfile
set autoread
autocmd BufWritePre * %s/\s\+$//e "Auto remove trailing whitespace
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif " autoquit if only nerdtree is open

set formatoptions-=cro " dont add comment on newline

" -------------------------------------------------------------------------------------------------
" Hotkeys
" -------------------------------------------------------------------------------------------------
map <C-h> <Esc>:bprev<CR>
map <C-h> <Esc>:bprev<CR>
nmap <C-l> :bnext<CR>
nmap <C-l> :bnext<CR>

map <C-\>" <Esc>:split<CR>
map <C-\>% <Esc>:vsplit<CR>
nmap <C-\>" :split<CR>
nmap <C-\>% :vsplit<CR>

noremap <leader>b <Esc>:CtrlPBuffer<CR>
nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>B :set nomore <Bar> :ls <Bar> :set more <CR>:b<Space>
noremap <leader>B <Esc>:set nomore <Bar> :ls <Bar> :set more <CR>:b<Space>

" -------------------------------------------------------------------------------------------------
" Status stuff
" -------------------------------------------------------------------------------------------------
" enable tagbar for go
let g:tagbar_type_go = {
    \ 'ctagstype': 'go',
    \ 'kinds' : [
        \'p:package',
        \'f:function',
        \'v:variables',
        \'t:type',
        \'c:const'
    \]
\}

" -------------------------------------------------------------------------------------------------
" Airline
" -------------------------------------------------------------------------------------------------
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#branch#enabled = 1
" let g:airline_left_sep = ' ‚ù§  '
let g:airline_right_sep = ' üüÜ  '
let g:airline_section_warning = ''
let g:airline_section_y = ''
let g:airline_section_x = ''

" Fixes some error with airline and tagbar
let g:airline#extensions#tagbar#enabled = 0

" -------------------------------------------------------------------------------------------------
" Theme
" -------------------------------------------------------------------------------------------------
if (has("nvim"))
   let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
if (has("termguicolors"))
   set termguicolors
endif
syntax on
set bg:dark

" color gruvbox
" silent! colorscheme gruvbox
" let g:airline_theme='gruvbox'

" color dracula
" silent! colorscheme dracula
" let g:airline_theme = 'dracula'

" color onedark
" silent! colorscheme onedark
" let g:airline_theme='onedark'

color one
silent! colorscheme one
let g:airline_theme='one'


" -------------------------------------------------------------------------------------------------
" NERDTree
" -------------------------------------------------------------------------------------------------
nnoremap <silent> <expr> <C-g> g:NERDTree.IsOpen() ? "\:NERDTreeClose<CR>" : bufexists(expand('%')) ? "\:NERDTreeFind<CR>" : "\:NERDTree<CR>"
:nnoremap <C-2> 2gt
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

"nnoremap <silent> <C-l> :TagbarToggle <CR>


" -------------------------------------------------------------------------------------------------
" Search
" -------------------------------------------------------------------------------------------------
nmap     <leader>f <Plug>CtrlSFPrompt
vmap     <leader>f <Plug>CtrlSFVwordPath
vmap     <leader>F <Plug>CtrlSFVwordExec
nmap     <leader>n <Plug>CtrlSFCwordPath
nmap     <leader>p <Plug>CtrlSFPwordPath
nnoremap <leader>o :CtrlSFOpen<CR>
nnoremap <leader>t :CtrlSFToggle<CR>
inoremap <leader>t <Esc>:CtrlSFToggle<CR>


" -------------------------------------------------------------------------------------------------
" File Types
" -------------------------------------------------------------------------------------------------
autocmd FileType javascript setlocal shiftwidth=2 softtabstop=2 expandtab
autocmd FileType typescript setlocal shiftwidth=2 softtabstop=2 expandtab
autocmd FileType python setlocal shiftwidth=4 softtabstop=4 expandtab


